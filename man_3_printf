.TH man 3 "20 May 2022" "0.30" "_printf man page"
.SH NAME
.B _printf
- Formatted output conversion and print.
.SH SYNOPSIS
.B #include "main.h"

.B int _printf(const char *
.I format
.B , ...)
.SH DESCRIPTION
.B _printf()
<<<<<<< HEAD
=======

>>>>>>> 5a56f27b4e56160204a619e88a34f0c55420121c
Prints to standard output according to format
.I format
string that specifies how subsequent arguments are converted for output to be printed. 
.SH Return value
On successful return, these functions return the number of characters printed, excluding the null byte used to end output to strings.
<<<<<<< HEAD
If an output error is encountered, a negative value is returned.
.SH Format of the format string
The format string is composed of 0 or more directives, characters that are not %, which are copied to the output stream. The format string also comprise conversion specifications, each of which result in fetching zero or more subsequent arguments. The character % is use to introduce each conversion specification and ends with the conversion specifier.
=======

If an output error is encountered, a negative value is returned.
.SH Format of the format string
The format string is composed of 0 or more directives, characters that are not %, which are copied to the output stream. The format string also comprise conversion specifications, each of which result in fetching zero or more subsequent arguments. The character % is use to introduce each conversion specification and ends with the conversion specifier.

>>>>>>> 5a56f27b4e56160204a619e88a34f0c55420121c
The argument must correspond properly with the conversion specifier. By default, the arguments are used in the order given.
.SH The conversion specifier
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.
.TP
.B S
Prints a string. Non printable characters are printed as "\x" followed by their ASCII values in two digit hexadecimal
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
.B x,
The unsigned int argument is converted to unsigned lowercase hexadecimal notation(x).
.TP                                                                             .B X
The unsigned int argument is converted to unsigned uppercase hexadecimal notation (X). 
.TP
.B u
The unsigned int argument is converted to unsigned decimal notation
.TP
.B o, b
The unsigned int argument is converted to unsigned octal notation(o) or binary notation(b).
.TP
.B p
Address is printed in hexadecimal.
.TP
.B r
Prints a string in reverse.
.TP
.B R
Prints a string converted to rot13
.TP
.B %
A '%' is written but no argument is converted. The complete version specification is '%%'
.SH EXAMPLE
To print the name of a person, school and age where name of person, school are pointer to string and age to int:
<<<<<<< HEAD

#include "main.h"

_printf("%s, %s, %i\\n", your_name, school, age);

=======
#include "main.h"

_printf("%s, %s, %i\\n", your_name, school, age);
>>>>>>> 5a56f27b4e56160204a619e88a34f0c55420121c
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
mahi SA'ID, KELECHI OBI
